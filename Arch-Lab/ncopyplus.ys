#/* $begin ncopy-ys */


#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

#/* $begin ncopy-ys */


#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
		# Loop header
		xorq %rax,%rax			# count = 0;
		andq %rdx,%rdx			# len <= 0?
		jle Done			# if so, goto Done:
		iaddq $-3, %rdx
		jmp Test
Loop:	
		mrmovq (%rdi), %r8		# read val from src...
		mrmovq 8(%rdi), %r9		# read next val
		mrmovq 16(%rdi), %r10		# read next val
		mrmovq 24(%rdi), %r11		
		rmmovq %r8, (%rsi)		# ...and store it to dst
		rmmovq %r9, 8(%rsi)		# 
		rmmovq %r10, 16(%rsi)		# 
		rmmovq %r11, 24(%rsi)		#
		andq %r8, %r8			# val <= 0?
		jle L1				
		iaddq $1, %rax			# count++
L1:
		andq %r9, %r9
		jle L2
		iaddq $1, %rax			# count++
L2:
		andq %r10, %r10
		jle L3
		iaddq $1, %rax
L3:
		andq %r11, %r11
		jle L4
		iaddq $1, %rax
L4:
		iaddq $32, %rdi			# src += 3
		iaddq $32, %rsi			# dst += 3
		iaddq $-4, %rdx
Test:	
		jg Loop				# if so, goto Loop:
		iaddq $3, %rdx			#
		je Done
		
		mrmovq (%rdi), %r8
		rmmovq %r8, (%rsi)
		andq %r8, %r8
		jle L5
		iaddq $1, %rax
L5:
		iaddq $-1, %rdx
		je Done
		
		mrmovq 8(%rdi), %r8
		rmmovq %r8, 8(%rsi)
		andq %r8, %r8
		jle L6
		iaddq $1, %rax
L6:
		iaddq $-1, %rdx
		je Done

		mrmovq 16(%rdi), %r8
		rmmovq %r8, 16(%rsi)
		andq %r8, %r8
		jle Done
		iaddq $1, %rax

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
		ret
##################################################################
# Keep the following label at the end of your function
End:


#/* $end ncopy-ys */
