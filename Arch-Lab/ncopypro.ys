##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
		# Loop header
		xorq %rax,%rax			# count = 0;
		andq %rdx,%rdx			# len <= 0?
		jle Done			# if so, goto Done:
		iaddq $-2, %rdx
		jmp Test
Loop:	
		mrmovq (%rdi), %r8		# read val from src...
		mrmovq 8(%rdi), %r9		# read next val
		mrmovq 16(%rdi), %r10		# read next val
		rmmovq %r8, (%rsi)		# ...and store it to dst
		rmmovq %r9, 8(%rsi)		# 
		rmmovq %r10, 16(%rsi)		# 
		
		rrmovq %rax, %r11
		iaddq $1, %r11
		andq %r8, %r8			
		cmovg %r11, %rax			
		
		rrmovq %rax, %r11
		iaddq $1, %r11
		andq %r9, %r9			
		cmovg %r11, %rax

		rrmovq %rax, %r11
		iaddq $1, %r11
		andq %r10, %r10			
		cmovg %r11, %rax

		iaddq $24, %rdi			# src += 3
		iaddq $24, %rsi			# dst += 3
		iaddq $-3, %rdx
Test:	
		jg Loop				# if so, goto Loop:
		je Done
		iaddq $2, %rdx			#
		jmp Remaining			# 

Loop2:
		mrmovq (%rdi), %r8
		rrmovq %rax, %r11
		rmmovq %r8, (%rsi)
		iaddq $1, %r11
		andq %r8, %r8
		cmovg %r11, %rax
		
		iaddq $8, %rdi
		iaddq $8, %rsi
		iaddq $-1, %rdx
Remaining:
		jg Loop2
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
		ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
