# copy.ys: Copy a source block to a destination block

	.pos 0
	irmovq stack, %rsp	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program

	.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block		# copy_block(src, dest, 3)
	ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
	irmovq $8, %r8		# Constant 8
	irmovq $1, %r9		# Constant 1
	xorq %rax, %rax		# result = 0
	andq %rdx, %rdx		# Set conditional codes
	jmp test		# Goto test
loop:
	mrmovq (%rdi), %r10	# val = *src
	addq %r8, %rdi		# src++
	rmmovq %r10, (%rsi)	# *dest = val
	addq %r8, %rsi		# dest++
	xorq %r10, %rax		# result ^= val
	subq %r9, %rdx		# len--
test:
	jg loop			# Stop when len <= 0
	ret

# Stack here
	.pos 0x200
stack:

